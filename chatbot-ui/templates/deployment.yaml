kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.name }}
  labels: 
    {{- include "labels" . | nindent 4 }}
    deployment: {{ .Values.name }}
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        deployment: {{ .Values.name }}
        {{- if .Values.serviceMesh.enabled }}
        sidecar.istio.io/inject: "true"
        {{- end }}
    spec:
      containers:
        - name: {{ .Values.name }}
          image: {{ tpl .Values.image $ }}
          ports:
            - containerPort: 3000
              protocol: TCP
          imagePullPolicy: {{ .Values.imagePullPolicy | default "IfNotPresent" }}
          resources:
            {{- .Values.resources | toYaml | nindent 12 }}
        {{- if .Values.openid.enabled }}
        - name: "{{ .Values.name }}-oauth"
          image: "{{ .Values.openid.image.repository }}:{{ .Values.openid.image.tag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy | default "Always" }}
          args:
            - --config=/etc/oauth2_proxy/oauth2_proxy.cfg
            - --http-address=0.0.0.0:4180
            - --https-address=0.0.0.0:4443
          {{- if .Values.metrics.enabled }}
            - --metrics-address=0.0.0.0:44180
          {{- end }}
          ports:
            - containerPort: 4180 #exposed host from existing chart
              protocol: TCP
            {{- if .Values.metrics.enabled }}
            - containerPort: 44180 #exposed host from existing chart
              protocol: TCP
              name: metrics
            {{- end }}
          {{- if .Values.openid.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /ping
              port: 3000-tcp
              scheme: HTTP
            timeoutSeconds: {{ .Values.openid.livenessProbe.timeoutSeconds }}
            initialDelaySeconds: {{ .Values.openid.livenessProbe.initialDelaySeconds }}
          {{- end }}
          {{- if .Values.openid.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /ready
              port: 3000-tcp
              scheme: HTTP
            timeoutSeconds: {{ .Values.openid.readinessProbe.timeoutSeconds }}
            initialDelaySeconds: {{ .Values.openid.readinessProbe.initialDelaySeconds }}
            successThreshold: {{ .Values.openid.readinessProbe.successThreshold }}
            periodSeconds: {{ .Values.openid.readinessProbe.periodSeconds }}
          {{- end }}
          volumeMounts:
            - name: "{{ .Values.name }}-oauth"
              mountPath: /etc/oauth2_proxy/oauth2_proxy.cfg
              subPath: oauth2_proxy.cfg
          #  - mountPath: /etc/pki/tls/certs/generated
          #     name: cert-mount
          #     readOnly: true
      {{- end }}
      volumes:
      {{- if .Values.openid.enabled }}
        - name: "{{ .Values.name }}-oauth"
          configMap:
            name: "{{ .Values.name }}-oauth"
      {{- end }}
        # - name: cert-mount
        #   secret:
        #     secretName: "{{ .Values.name }}-certs"
      restartPolicy: Always
      terminationGracePeriodSeconds: 30 
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
